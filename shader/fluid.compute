#version 460 core

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;


struct Particle
{
    vec4 Position;
    vec4 Velocity;
    vec4 force;
    vec4 surfNormal;
    float density;
    float pressure;
    float ToCamera;
    float padding;
};
layout(std430, binding = 1) buffer InputBuffer
{
    Particle inputData[];
};


layout(std430, binding = 2) buffer OutputBuffer
{
    Particle outputData[];
};


uniform vec3 CameraPos;


void main()
{
    // 일단 input 내용을 그대로 output 에 넣는 방식으로 진행
    // 동일하게 하나의 그룹은 x 축 방향만 가지고 있고, x 축 방향 그룹만 존재한다고 생각
    uint Index = gl_GlobalInvocationID.x;
        Particle curParticle = inputData[Index];
        curParticle.ToCamera = distance(CameraPos, curParticle.Position.xyz);

    outputData[Index] = curParticle;
    //outputData[Index].padding = inputData[Index].padding + 1.0;
}